<style>
	.input-title {
		width: 90%;
	    font: 200 30px/40px "microsoft yahei";
	    height: 50px;
	    border: 0;
	    padding: 0 12px;
	    margin: 0;
	    box-shadow: none !important;
	}
</style>
<form class="fm-publish" action="/publish" method="post">
	<input type="text" name="title" maxlength="100" class="form-control input-title" placeholder="文章标题">
	{{> editor}}
	<button class="btn btn-large btn-success" type="submit">发表</button>
</form>
<script>
var simplemde = new SimpleMDE({
	    autofocus: true,
	    autosave: {
	        enabled: true,
	        uniqueId: "mdeditor",
	        delay: 1000,
	    },
	    blockStyles: {
	        bold: "__",
	        italic: "_"
	    },
	    element: document.getElementById("mdeditor"),
	    forceSync: true,
	    indentWithTabs: false,
	    initialValue: "",
	    insertTexts: {
	        horizontalRule: ["", "\n\n-----\n\n"],
	        image: ["![](http://", ")"],
	        link: ["[", "](http://)"],
	        table: ["", "\n\n| Column 1 | Column 2 | Column 3 |\n| -------- | -------- | -------- |\n| Text     | Text      | Text     |\n\n"],
	    },
	    lineWrapping: false,
	    parsingConfig: {
	        allowAtxHeaderWithoutSpace: true,
	        strikethrough: false,
	        underscoresBreakWords: true,
	    },
	    placeholder: "开始写文章...",
	    previewRender: function(plainText) {
	        return customMarkdownParser(plainText); // Returns HTML from a custom parser
	    },
	    previewRender: function(plainText, preview) { // Async method
	        setTimeout(function(){
	            preview.innerHTML = customMarkdownParser(plainText);
	        }, 250);

	        return "Loading...";
	    },
	    promptURLs: true,
	    renderingConfig: {
	        singleLineBreaks: false,
	        codeSyntaxHighlighting: true,
	    },
	    shortcuts: {
	        drawTable: "Cmd-Alt-T"
	    },
	    spellChecker: false,
	    status: false,
	    status: ["autosave", "lines", "words", "cursor"], // Optional usage
	    status: ["autosave", "lines", "words", "cursor", {
	        className: "keystrokes",
	        defaultValue: function(el) {
	            this.keystrokes = 0;
	            el.innerHTML = "0 Keystrokes";
	        },
	        onUpdate: function(el) {
	            el.innerHTML = ++this.keystrokes + " Keystrokes";
	        }
	    }], // Another optional usage, with a custom status bar item that counts keystrokes
	    styleSelectedText: false,
	    tabSize: 4,
});	

</script>